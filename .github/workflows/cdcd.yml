name: domi Build, Push, and Deploy
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.2'

      - name: Build domi Linux amd64
        run: GOOS=linux GOARCH=amd64 go build -o bin/domi github.com/devops-kung-fu/domi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/devops-kung-fu/domi:${{ steps.get_version.outputs.VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Trivy
        uses: aquasecurity/trivy-action@0.0.8
        with:
          image-ref: ghcr.io/devops-kung-fu/domi:${{ steps.get_version.outputs.VERSION }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH,MEDIUM'

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # - name: Configure .kubeconfig
      #   run: |
      #     aws eks --region us-east-1 update-kubeconfig --name domi-test-4iGsdgx7
      #     kubectl get svc

      # - name: Helm Install
      #   run: helm upgrade domi ./domi-chart

      # - name: domi URL
      #   run: |
      #     export SERVICE_IP=$(kubectl get svc --namespace default domi --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
      #     echo http://$SERVICE_IP:80